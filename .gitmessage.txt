# commit message格式（文件：.gitmessage.txt）

<type>(<scope>): <subject>

<body>

<footer>

#------------------------------------------
#
# <type> 类型，必须是以下之一
#
#   * feat: 新功能
#   * fix: 修复 BUG
#   * docs: 对文档进行了修改
#   * style: 格式：不影响代码含义的修改（e.g. 空格、格式化、缺少分号等）
#   * refactor: 重构：既没有新增功能，又没有修复 BUG 的代码改动
#   * perf: 性能：能够提升性能的代码修改
#   * test: 添加缺失的测试或修改已存在的测试
#   * build: 对构建系统或外部依赖项进行了修改
#   * ci: 对 CI 配置文件或脚本进行修改
#
# <scope> 影响的范围
#
#   表明改动的区域，如果没有合适的区域，可用通配符 * 代替
#     按照接口粒度（user/login）、按照 service(UserService)、model(UserModel) 的粒度
#
# <subject> 简要描述本次改动，遵循以下三条：
#
#   1、以动词开头，使用第一人称现在时，e.g. change，而不是 changed 或 changes
#   2、首字母不要大写
#   3、结尾不用句号 .
#
# <body>
#
#   对 <subject> 中内容的展开，更加详尽的描述
#   应该包含修改动机、修改前后的对比等
#
# <footer>
#
#   只用于两种情况：
#     1、不兼容的变动（重大变动）：
#       以 BREAKING CHANGE 开头，后面跟变动的描述、理由以及迁移说明
#     2、关闭 Issue：
#       e.g. Closes #234 或者 Closes #123, #245, #999
#
# Revert 特殊情况：回滚
#
#   一种特殊情况：当前 commit 用于撤销以前的 commit，则必须以 revert: 开头，
#     后面紧跟被撤销 commit 的 Header，示例如下
#
#       revert: feat(pencil): add 'graphiteWidth' option
#
#       This reverts commit 667ecc1654a317a13331b17617d973392f415f02.
#
#     Body 部分格式固定：This reverts commit <SHA1>
#
# 有助于实施规范的方式
#
#   1、复制所有内容到 .gitmessage.txt
#   2、配置 git：git config --global commit.template .gitmessage.txt
#   3、使用：git commit -a
#
# 示例
#
#   1、简短的示例（不使用 .gitmessage.txt）
#     git commit -m "fix(core): 修复了内核的一个xx bug" -m "此次修复了之前一直导致系统不稳定的问题" -m "关闭issue xx"
#
#   2、feat 示例
#     #######################################################################
#     feat($browser): onUrlChange event (popstate/hashchange/polling)
#
#     Added new event to $browser:
#       - forward popstate event if available
#       - forward hashchange event if popstate not available
#       - do polling when neither popstate nor hashchange available
#
#     Breaks $browser.onHashChange, which was removed (use onUrlChange instead)
#     #######################################################################
#
#     #######################################################################
#     feat(directive): ng:disabled, ng:checked, ng:multiple, ng:readonly, ng:selected
#
#     New directives for proper binding these attributes in older browsers (IE).
#     Added coresponding description, live examples and e2e tests.
#
#     Closes #351
#     #######################################################################
#
#     #######################################################################
#     feat($compile): simplify isolate scope bindings
#
#     Changed the isolate scope binding options to:
#       - @attr - attribute binding (including interpolation)
#       - =model - by-directional model binding
#       - &expr - expression execution binding
#
#     This change simplifies the terminology as well as
#     number of choices available to the developer. It
#     also supports local name aliasing from the parent.
#
#     BREAKING CHANGE: isolate scope bindings definition has changed and
#     the inject option for the directive controller injection was removed.
#
#     To migrate the code follow the example below:
#
#     Before:
#
#     scope: {
#       myAttr: 'attribute',
#       myBind: 'bind',
#       myExpression: 'expression',
#       myEval: 'evaluate',
#       myAccessor: 'accessor'
#     }
#
#     After:
#
#     scope: {
#       myAttr: '@',
#       myBind: '@',
#       myExpression: '&',
#       // myEval - usually not useful, but in cases where the expression is assignable, you can use '='
#       myAccessor: '=' // in directive's template change myAccessor() to myAccessor
#     }
#
#     The removed `inject` wasn't generaly useful for directives so there should be no code using it.
#     #######################################################################
#
#     #######################################################################
#   3、fix 示例
#     fix($compile): couple of unit tests for IE9
#
#     Older IEs serialize html uppercased, but IE9 does not...
#     Would be better to expect case insensitive, unfortunately jasmine does
#     not allow to user regexps for throw expectations.
#
#     Closes #392
#     Breaks foo.bar api, foo.baz should be used instead
#     #######################################################################
#
#   4、style 示例
#     #######################################################################
#     style($location): add couple of missing semi colons
#
#     docs(guide): updated fixed docs from Google Docs
#
#     Couple of typos fixed:
#     - indentation
#     - batchLogbatchLog -> batchLog
#     - start periodic checking
#     - missing brace
#     #######################################################################
